#include<stdio.h>

// Global variables
int stack[100], choice, n, top, x, i;

// Function prototypes
void push(void);
void pop(void);
void display(void);

int main()
{
    top = -1;  // Initialize stack as empty (top = -1)
    
    printf("\n Enter the size of STACK[MAX=100]:");
    scanf("%d", &n);
    
    printf("\n\t STACK OPERATIONS USING ARRAY");
    printf("\n\t--------------------------------");
    printf("\n\t 1.PUSH\n\t 2.POP\n\t 3.DISPLAY\n\t 4.EXIT");
    
    do
    {
        printf("\n Enter your Choice:");
        scanf("%d", &choice);
        
        switch(choice)
        {
            case 1:
                push();    // Call push function
                break;
            case 2:
                pop();     // Call pop function
                break;
            case 3:
                display(); // Call display function
                break;
            case 4:
                printf("\n\t EXIT POINT ");
                break;
            default:
                printf("\n\t Please Enter a Valid Choice(1/2/3/4)");
        }
    }
    while(choice != 4);  // Continue until user chooses to exit
    
    return 0;
}

// Function to push element onto stack
void push()
{
    if(top >= n-1)  // Check if stack is full
    {
        printf("\n\tSTACK is over flow");
    }
    else
    {
        printf(" Enter a value to be pushed:");
        scanf("%d", &x);
        top++;             // Increment top pointer
        stack[top] = x;    // Store value at top position
    }
}

// Function to pop element from stack
void pop()
{
    if(top <= -1)  // Check if stack is empty
    {
        printf("\n\t Stack is under flow");
    }
    else
    {
        printf("\n\t The popped elements is %d", stack[top]);
        top--;  // Decrement top pointer
    }
}

// Function to display stack elements
void display()
{
    if(top >= 0)  // Check if stack has elements
    {
        printf("\n The elements in STACK \n");
        for(i = top; i >= 0; i--)  // Display from top to bottom
            printf("\n%d", stack[i]);
        printf("\n Press Next Choice");
    }
    else
    {
        printf("\n The STACK is empty");
    }
}